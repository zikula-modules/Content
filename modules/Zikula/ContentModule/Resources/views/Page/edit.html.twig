{# purpose of this template: build the form to edit an instance of page #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends '@ZikulaContentModule/' ~ baseTemplate ~ '.html.twig' %}
{% trans_default_domain 'zikulacontentmodule' %}
{% block title mode == 'create' ? 'Create page'|trans : 'Edit page'|trans %}
{% block admin_page_icon mode == 'create' ? 'plus' : 'edit' %}
{% block content %}
    <div class="zikulacontentmodule-page zikulacontentmodule-edit">
        {% form_theme form with [
            '@ZikulaContentModule/Form/bootstrap_4.html.twig',
            '@ZikulaFormExtension/Form/form_div_layout.html.twig'
        ] %}
        {{ form_start(form, {attr: {id: 'pageEditForm', class: 'zikulacontent-edit-form'}}) }}
        {{ form_errors(form) }}
        de.guite.modulestudio.metamodel.impl.ApplicationImpl@53ac845a (name: Content, documentation: Flexible hierachical page management.) (vendor: Zikula, author: Axel Guckelsberger, email: info@ziku.la, url: https://ziku.la, version: 5.2.0, prefix: content, license: http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License, targetCoreVersion: ZK30, capabilities: null, isSystemModule: false, amountOfExampleRows: 1, generateAccountApi: true, generateSearchApi: true, generateMailzApi: false, generateListBlock: true, generateDetailBlock: true, generateModerationBlock: true, generateListContentType: false, generateDetailContentType: false, generateNewsletterPlugin: false, generateModerationPanel: true, generatePendingContentSupport: true, generateExternalControllerAndFinder: true, generateScribitePlugins: true, generateTagSupport: false, generateMultiHookNeedles: true, generateRssTemplates: false, generateAtomTemplates: false, generateCsvTemplates: true, generateXmlTemplates: true, generateJsonTemplates: true, generateKmlTemplates: false, generateIcsTemplates: false, generatePdfSupport: true, authenticationMethod: NONE, filterHookProvider: DISABLED, generateOnlyBaseClasses: false, skipFiles: 
                AppSettings.php,
                Block/Form/Type/ItemBlockType.php,
                Block/Form/Type/ItemListBlockType.php,
                Block/ItemListBlock.php,
                Container/LinkContainer.php,
                ContentModuleInstaller.php,
                Controller/ContentItemController.php,
                Controller/PageController.php,
                DependencyInjection/ZikulaContentExtension.php,
                Entity/ContentItemEntity.php,
                Entity/Factory/EntityInitialiser.php,
                Entity/PageEntity.php,
                Entity/Repository/PageRepository.php,
                Form/Type/PageType.php,
                Helper/CollectionFilterHelper.php,
                Helper/ExampleDataHelper.php,
                Helper/ListEntriesHelper.php,
                Helper/LoggableHelper.php,
                Helper/ModelHelper.php,
                Helper/PermissionHelper.php,
                Helper/SearchHelper.php,
                Helper/TranslatableHelper.php,
                Helper/ViewHelper.php,
                Listener/EntityLifecycleListener.php,
                Menu/MenuBuilder.php,
                Resources/config/routing.yml,
                Resources/views/Block/itemlist_contentItem_display_description.html.twig,
                Resources/views/Block/itemlist_contentItem_display.html.twig,
                Resources/views/Block/itemlist_page_display_description.html.twig
            , markFiles: 
                composer.json,
                Resources/config/services.yml
            , timestampAllGeneratedFiles: false, versionAllGeneratedFiles: true, separateAdminTemplates: false, generatePoweredByBacklinksIntoFooterTemplates: true, generateTests: true, writeModelToDocs: true, generateTechnicalDocumentation: true, viewActionsPosition: START, viewActionsStyle: DROPDOWN, viewActionsWithIcons: true, displayActionsPosition: START, displayActionsStyle: BUTTON_GROUP, displayActionsWithIcons: true)
        {% if translationsEnabled == true %}
            <div class="zikula-bootstrap-tab-container">
                <ul class="{{ form.vars.id|lower }}-translation-locales nav nav-tabs" role="tablist">
                    {% for language in supportedLanguages %}
                        <li class="nav-item" role="presentation">
                            <a href="#" data-toggle="tab" data-target=".{{ form.vars.id|lower }}-translations-fields-{{ language }}" class="nav-link{% if language == app.request.locale %} active{% endif %}">
                                {% if not form.vars.valid %}
                                    <span class="label label-danger"><i class="fa fa-exclamation-triangle"></i> <span class="sr-only">{% trans %}Errors{% endtrans %}</span></span>
                                {% endif %}
                                {% set hasRequiredFields = language in localesWithMandatoryFields %}
                                {% if hasRequiredFields %}<span class="required">{% endif %}{{ language|language_name }}{% if hasRequiredFields %}</span>{% endif %}
                            </a>
                        </li>
                    {% endfor %}
                </ul>
                <div class="{{ form.vars.id|lower }}-translation-fields tab-content">
                    {% for language in supportedLanguages %}
                        <div class="{{ form.vars.id|lower }}-translations-fields-{{ language }} tab-pane fade{% if language == app.request.locale %} show active{% endif %}">
                            <fieldset>
                                <legend>{{ language|language_name }}</legend>
                                {% if language == app.request.locale %}
                                    {{ form_row(form.title) }}
                                    {{ form_row(form.metaDescription) }}
                                    {{ form_row(form.optionalString1) }}
                                    {{ form_row(form.optionalString2) }}
                                    {{ form_row(form.optionalText) }}
                                    {{ form_row(form.slug) }}
                                {% else %}
                                    {{ form_row(attribute(form, 'translations' ~ language)) }}
                                {% endif %}
                            </fieldset>
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% else %}
            {% set language = app.request.locale %}
            <fieldset>
                <legend>{{ language|language_name }}</legend>
                {{ form_row(form.title) }}
                {{ form_row(form.metaDescription) }}
                {{ form_row(form.optionalString1) }}
                {{ form_row(form.optionalString2) }}
                {{ form_row(form.optionalText) }}
                {{ form_row(form.slug) }}
            </fieldset>
        {% endif %}
        <fieldset>
            <legend>{% trans %}Further properties{% endtrans %}</legend>
            {% if mode == 'create' and form.parent is defined %}
                {{ form_row(form.parent) }}
            {% endif %}
            {{ form_row(form.showTitle) }}
            {{ form_row(form.skipHookSubscribers) }}
            <div class="d-none">
                {{ form_row(form.layout) }}
            </div>
            <div class="d-none">
                {{ form_row(form.views) }}
            </div>
            {{ form_row(form.active) }}
            {{ form_row(form.activeFrom) }}
            {{ form_row(form.activeTo) }}
            {{ form_row(form.scope) }}
            {{ form_row(form.inMenu) }}
            {{ form_row(form.stylingClasses) }}
            <div class="d-none">
                {{ form_row(form.contentData) }}
            </div>
        </fieldset>
        
        {% if featureActivationHelper.isEnabled(constant('Zikula\\ContentModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'page') %}
            {{ include('@ZikulaContentModule/Helper/includeCategoriesEdit.html.twig', {obj: page}) }}
        {% endif %}
        {% if mode != 'create' %}
            {{ include('@ZikulaContentModule/Helper/includeStandardFieldsEdit.html.twig', {obj: page}) }}
        {% endif %}
        
        {% if supportsHookSubscribers and formHookTemplates|length > 0 %}
            <fieldset>
                {% for hookTemplate in formHookTemplates %}
                    {{ include(hookTemplate.0, hookTemplate.1, ignore_missing = true) }}
                {% endfor %}
            </fieldset>
        {% endif %}
        
        {% if form.moderationSpecificCreator is defined or form.moderationSpecificCreationDate is defined %}
            <fieldset id="moderationFieldsSection">
                <legend>{% trans %}Moderation{% endtrans %} <i class="fa fa-expand"></i></legend>
                <div id="moderationFieldsContent">
                    {% if form.moderationSpecificCreator is defined %}
                        {{ form_row(form.moderationSpecificCreator) }}
                    {% endif %}
                    {% if form.moderationSpecificCreationDate is defined %}
                        {{ form_row(form.moderationSpecificCreationDate) }}
                    {% endif %}
                </div>
            </fieldset>
        {% endif %}
        
        
        {# include possible submit actions #}
        <div class="form-group form-buttons row">
            <div class="col-md-9 offset-md-3">
                {% for action in actions %}
                    {{ form_widget(attribute(form, action.id)) }}
                    {% if mode == 'create' and action.id == 'submit' and form.submitrepeat is defined %}
                        {{ form_widget(attribute(form, 'submitrepeat')) }}
                    {% endif %}
                {% endfor %}
                {{ form_widget(form.reset) }}
                {{ form_widget(form.cancel) }}
            </div>
        </div>
        {{ form_end(form) }}
        {% if supportsHookSubscribers %}
            {% set hookId = mode != 'create' ? page.id : null %}
            {% set hooks = notifyDisplayHooks(eventName='zikulacontentmodule.ui_hooks.pages.form_edit', id=hookId, outputAsArray=true) %}
            {% if hooks is iterable and hooks|length > 0 %}
                {% for area, hook in hooks %}
                    <div class="z-displayhook" data-area="{{ area|e('html_attr') }}">{{ hook|raw }}</div>
                {% endfor %}
            {% endif %}
        {% endif %}
        
    </div>
{% endblock %}
{% block footer %}
    {{ parent() }}
    {{ pageAddAsset('javascript', zasset('@ZikulaContentModule:js/ZikulaContentModule.Validation.js'), 98) }}
    {{ pageAddAsset('javascript', zasset('@ZikulaContentModule:js/ZikulaContentModule.EditFunctions.js'), 99) }}
    {% set formInitScript %}
        <script>
        /* <![CDATA[ */
            
            ( function($) {
                $(document).ready(function() {
                    zikulaContentInitEditForm('{{ mode }}', '{% if mode != 'create' %}{{ page.id }}{% endif %}');
                    zikulaContentInitDateField('zikulacontentmodule_page_activeFrom');
                    zikulaContentInitDateField('zikulacontentmodule_page_activeTo');
                    {% if form.moderationSpecificCreator is defined %}
                        initUserLiveSearch('zikulacontentmodule_page_moderationSpecificCreator');
                    {% endif %}
                });
            })(jQuery);
        /* ]]> */
        </script>
    {% endset %}
    {{ pageAddAsset('footer', formInitScript) }}
{% endblock %}
